#!/usr/bin/env python3

# Author: Wojciech Dy≈ºewski <mdyzio@icm.edu.pl>
# PoC created: 28.03.2019

# requires python3-openssl

WARN_DAYS = 14
CRIT_DAYS = 7

BUNDLE_FILE = 'bundle.pem'

SPLIT_STRING = '-----BEGIN CERTIFICATE-----'
STATE_OK = 0
STATE_WARNING = 1
STATE_CRITICAL = 2
STATE_UNKNOWN = 3

import datetime
from OpenSSL import crypto

warn_timestamp = (datetime.datetime.now() + datetime.timedelta(days=WARN_DAYS)).strftime('%Y%m%d%H%M%SZ')
crit_timestamp = (datetime.datetime.now() + datetime.timedelta(days=CRIT_DAYS)).strftime('%Y%m%d%H%M%SZ')

print(warn_timestamp)
print(crit_timestamp)

if CRIT_DAYS > WARN_DAYS:
    print("CRIT_DAYS > WARN_DAYS doesn't make any sense")

for cert_text in open(BUNDLE_FILE).read().split(SPLIT_STRING)[1:]:
    try:
        cert = crypto.load_certificate(crypto.FILETYPE_PEM, SPLIT_STRING + cert_text)
    except:
        print("Unable to load certificate!")
        continue

    not_after = cert.get_notAfter().decode("utf-8")

    print("Issuer: " + str(cert.get_issuer()))
    print("Not after: " + not_after)

    if warn_timestamp < not_after:
        print("OK")
    elif crit_timestamp < not_after:
        print("WARNING")
    else:
        print("CRITICAL")
